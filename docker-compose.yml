version: '3' 
services:

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    volumes:
      - ~/bigdatavault/hadoop/dfs/name:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop-hive.env
    ports:
      - "9870:9870"
    networks:
      net_lucas:
        ipv4_address: 172.27.1.5
  
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    volumes:
      - ~/bigdatavault/hadoop/dfs/data:/hadoop/dfs/data
      - ./bank:/bank
    env_file:
      - ./hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    depends_on:
      - namenode
    ports:
      - "9864:9864"
    networks:
      net_lucas:
        ipv4_address: 172.27.1.6

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:3.1.0
    container_name: hive-metastore-postgresql
    depends_on:
      - datanode
    networks:
      net_lucas:
        ipv4_address: 172.27.1.9
    
  
  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9870 datanode:9864 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"
    depends_on:
      - hive-metastore-postgresql
    networks:
      net_lucas:
        ipv4_address: 172.27.1.8
  
  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
    depends_on:
      - hive-metastore
    networks:
      net_lucas:
        ipv4_address: 172.27.1.7
  
  
  spark-master:
    image: bde2020/spark-master:3.0.1-hadoop3.2
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    env_file:
      - ./hadoop-hive.env
    networks:
      net_lucas:
        ipv4_address: 172.27.1.10
     
  spark-worker-1:
    image: bde2020/spark-worker:3.0.1-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - HIVE_CORE_CONF_javax_jdo_option_ConnectionURL=jdbc:postgresql://hive-metastore/metastore
    depends_on:
      - spark-master
    ports:
      - 8081:8081
    env_file:
      - ./hadoop-hive.env
    networks:
      net_lucas:
        ipv4_address: 172.27.1.11

  zeppelin:
    image: lucas/zeppelin
    container_name: zeppelin
    environment:
      ZEPPELIN_NOTEBOOK_DIR: "/notebook"
      ZEPPELIN_LOG_DIR: "/logs"
      CORE_CONF_fs_defaultFS: "hdfs://namenode:8020"
      SPARK_MASTER: "spark://spark-master:7077"
      MASTER: "spark://spark-master:7077"
      SPARK_MASTER_URL: spark://spark-master:7077
      ZEPPELIN_PORT: 8080
      ZEPPELIN_JAVA_OPTS:
        -Dspark.driver.memory=1g
        -Dspark.executor.memory=2g
    ports:
      - 19090:8080
    env_file:
      - ./hadoop-hive.env
    volumes:
      - ~/bigdatavault/zeppelin/logs:/logs:rw
      - ~/bigdatavault/zeppelin/data:/data:rw
      - ~/bigdatavault/zeppelin/notebook:/notebook:rw
    networks:
      net_lucas:
        ipv4_address: 172.27.1.12

  database:
      image: mysql:5.7
      container_name: database
      ports:
          - "33061:3306"
      command: --init-file /data/application/init.sql
      volumes:
          - ~/bigdatavault/mysql/data:/var/lib/mysql
          - ./init.sql:/data/application/init.sql
      environment:
          MYSQL_ROOT_USER: root
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: hue
          MYSQL_USER: root
          MYSQL_PASSWORD: secret
      networks:
        net_lucas:
          ipv4_address: 172.27.1.14

  hue:
      image: gethue/hue:latest
      hostname: hue
      container_name: hue
      dns: 8.8.8.8
      ports:
      - "8888:8888"
      volumes:
        - ./hue-overrides.ini:/usr/share/hue/desktop/conf/z-hue.ini
      depends_on:
      - "database"
      networks:
        net_lucas:
          ipv4_address: 172.27.1.13

  zookeeper:
    image: zookeeper:3.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      net_lucas:
        ipv4_address: 172.27.1.15

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.27.1.16
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      net_lucas:
        ipv4_address: 172.27.1.16  

  streamsets:
    image: streamsets/datacollector:3.13.0-latest
    container_name: streamsets
    ports:
      - "18630:18630"
    networks:
      net_lucas:
        ipv4_address: 172.27.1.17  

  # mongodb:
  #   image: mongo
  #   container_name: mongo1
  #   volumes:
  #     - ~/volumes/mdata:/data/db
  #   ports:
  #     - 27017:27017
  #   command: --auth
  #   networks:
  #     net_lucas:
  #       ipv4_address: 172.27.1.18

  # redis:
  #   image: redis
  #   container_name: redis1
  #   volumes:
  #     - ~/volumes/rdata:/data
  #     - ./redis.conf:/etc/redis/redis.conf
  #   ports:
  #     - 16379:6379
  #   command: redis-server /etc/redis/redis.conf --appendonly yes
  #   networks:
  #     net_lucas:
  #       ipv4_address: 172.27.1.19

  kylin:
    image: apachekylin/apache-kylin-standalone:3.1.0
    container_name: kylin
    ports:
      - "7070:7070"
      - "8088:8088"
      - "50070:50070"
      - "8032:8032"
      - "8042:8042"
      - "16010:16010"
    mem_limit: 8G
    mem_reservation: 2G
    networks:
      net_lucas:
        ipv4_address: 172.27.1.20


networks:
  net_lucas:
    ipam:
      driver: default
      config:
        - subnet: 172.27.0.0/16
